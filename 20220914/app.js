// react
// 리액트
// 리액트는 페이스북에서 2011년에 만듦
// 페이스북에서 제공해주는 라이브러리

// 리액트의 데이터 구조는 단방향 데이터 흐름을 가지고 있음(리덕스)
// 리액트의 렌더링
// 리액트는 뷰 view 보여주는 것 view에 집중된 라이브러리

// 가상돔
// 1. 변화가 일어나면 변화된 버전의 가상돔으로 바꿔줌
// 데이터가 업데이트 되면 UI를 가상돔에 리렌더링 함(다시 그림)
// 2. 가상돔끼리 비교
// 변화 전의 가상돔과 변화된 가상돔을 비교해서
// 3. 비교했을 때 바뀐 부분만
// 실제 돔에 리렌더링 적용

// 리액트의 장점
// 유명하고 많이 사용함
// 자바스크립트만으로 개발할때보다 편하고 태그를 다루기 쉬움
// 재활용성 높음
// 불편하게 태그 선택자를 사용할 일이 적음
// html과 js파일이 많아질수록 관리하기가 힘든 부분을 보완

// 새로고침 하지 않고 페이지를 동적으로 보여줄 수 있음(모바일 앱처럼 웹을)
// 다른 페이지로 이동한 것처럼 눈속임으로 보여줄 수 있음
// 기본 자바스크립트가 가지고 있는 문제를 해결하기 위해 만들어졌음

// 위의 문제란 태그 선택자의 사용을 줄이기 위해
// JSX를 사용해서 html과 js를 합쳐서 컴포넌트로 만들 수 있고
// 사용하고 태그의 이름을 자유롭게 지울 수 있음

// html파일과 js파일을 따로 만들 필요 없음

// JSX : 문자열도 아니고 html도 아닌 javaScript XML
// 웹 응용 프로그램의 구조를 만들기 위한 표준 마크업 언어 확장한 문법

// 모든 파일을 js파일로 생성 가능

// 리액트 설치 명령어 - npx create-react-app 폴더이름

// src 가보면 index.js와 app.js가 있는데
// 여기서 app.js가 컴포넌트
// index.js를 가져와서 보여주고 있음
// 컴포넌트는 하나의 태그로 무조건 감싸서 반환해야함
// 리액트의 기본 구성이 되어있고 초기값
// app.js는 html과 js를 합쳐놓은 컴포넌트
// document.getElementById("root") -> 리액트가 동적으로 내용을 그려줄 위치
// ReactDOM.createRoot 시작점 생성
// ReactDOM.createRoot (첫번째 매개변수 그려줄 컴포넌트, 그려줄 위치)

// public 폴더를 보면 index.html파일이 있는데
// 리액트는 index.html 하나로 싱글 페이지 어플리케이션
// 페이지가 하나고 그 한 개의 페이지에 정보만 동적으로 표현해줌

// 어떻게? 자바스크립가 바꿔주는 것
// 우리가 다른 페이지로 이동할때마다 html, css, js파일을 다 불러왔지만
// 리액트는 그럴 필요가 없음. 새로고침도 필요없음.

// 편리한 확장프로그램
// es7 react/redux/graphQL/react-native snippets
// 우리가 리액트로 작업을 하면서 리액트 키워드를 사용할 수 있게 도와줌

// 리액트 사용이랑 컴포넌트 좀 친해지라고
// 달력만들어보기 이쁘게
